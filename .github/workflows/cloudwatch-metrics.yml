name: Download CloudWatch Metrics

on:
 schedule:
   - cron: '0 */6 * * *'  # Fixed cron syntax
 workflow_dispatch:

permissions:
 id-token: write
 contents: write

jobs:
 fetch-metrics:
   runs-on: ubuntu-latest
   
   steps:
   - name: Checkout repository
     uses: actions/checkout@v2

   - name: Configure AWS Credentials
     uses: aws-actions/configure-aws-credentials@v4
     with:
       role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
       aws-region: us-east-1

   - name: Create metrics query file
     run: |
       echo '{
         "MetricDataQueries": [
           {
             "Id": "cpu_util",
             "MetricStat": {
               "Metric": {
                 "Namespace": "AWS/EC2",
                 "MetricName": "CPUUtilization",
                 "Dimensions": [
                   {
                     "Name": "InstanceId",
                     "Value": "i-0604ed0c65018e348"
                   }
                 ]
               },
               "Period": 300,
               "Stat": "Average"
             }
           },
           {
             "Id": "memory_util",
             "MetricStat": {
               "Metric": {
                 "Namespace": "CWAgent",
                 "MetricName": "Memory % Committed Bytes In Use",
                 "Dimensions": [
                   {
                     "Name": "InstanceId",
                     "Value": "i-0604ed0c65018e348"
                   }
                 ]
               },
               "Period": 300,
               "Stat": "Average"
             }
           }
         ]
       }' | jq -c '.' > query.json

   - name: Download metrics
     run: |
       start_time=$(date -d "6 hours ago" --iso-8601=seconds)
       end_time=$(date --iso-8601=seconds)
       aws cloudwatch get-metric-data \
         --metric-data-queries "$(cat query.json)" \
         --start-time "${start_time}" \
         --end-time "${end_time}" \
         --output json > raw_metrics.json

   - name: Format and save metrics
     run: |
       timestamp=$(date +%Y%m%d_%H%M%S)
       mkdir -p metrics
       jq . raw_metrics.json > "metrics/metrics_${timestamp}.json"
       cp "metrics/metrics_${timestamp}.json" metrics/latest.json

   - name: Commit and push if changes exist
     run: |
       git config --global user.email "github-actions[bot]@users.noreply.github.com"
       git config --global user.name "github-actions[bot]"
       git add metrics/
       if git diff --staged --quiet; then
         echo "No changes to commit"
       else
         git commit -m "Update metrics data [skip ci]"
         git push
       fi
